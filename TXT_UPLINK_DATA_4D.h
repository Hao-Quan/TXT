// Automatically generated by Simulation Framework ICD utility. DO NOT MODIFY!
// This area refers to ICD [ICD for RC27J] (ver: 1)
// Memory Area Name: TXT_INPUT_DATA (ver: 12) 
// Total size of this area is: 160 bytes.
#ifndef TXT_UPLINK_DATA_DEF
#define TXT_UPLINK_DATA_DEF


#include <stdint.h>


#ifndef __cplusplus
#ifndef bool
#define bool uint32_t
#endif
#endif

#define TXT_INPUT_DATA_VERSION 12

#if defined (_MSC_VER) || defined (__MINGW32__)
#define __attribute__(x)
#pragma pack(push)
#pragma pack(1)
#endif



typedef struct __attribute__((packed)) // This struct will be repeated 1 times in memory
{
	//DATA HEADER
	int32_t FLIGHT_ID_LENGTH;
	char FLIGHT_ID[FLIGHT_ID_LENGTH];
    int32_t DIRECTION;
    int32_t TIME_STAMP_DATA_YEAR;
    int32_t TIME_STAMP_DATA_MONTH;
    int32_t TIME_STAMP_DATA_DAY;
    int32_t TIME_STAMP_DATA_SECOND;
    int32_t TIME_STAMP_DATA_MINUTE;
    int32_t TIME_STAMP_DATA_HOUR;
    int32_t ID;
    
    // DATA PAYLOAD
    int32_t POSITION_TYPE;
    int32_t POSITION_NAME_LENGTH;
    char POSITION_NAME[POSITION_NAME_LENGTH];
    float POSITION_LATITUDE;
    float POSITION_LONGITUDE;
    int32_t LEVEL_DATA;
    int32_t RTA_SECOND;
    int32_t RTA_MINUTE;
    int32_t RTA_HOUR;
    int32_t RTA_TOLLERANCE;
    int32_t RTA_SECOND_SECOND;
    int32_t RTA_SECOND_MINUTE;
    int32_t RTA_SECOND_HOUR;
    int32_t RTA_SECOND_TOLLERANCE;
    int32_t SPEED;
    int32_t SPEED_SECOND;
    int32_t DEPARTURE_NAME_PROCEDURE_LENGTH;
    char DEPARTURE_NAME_PROCEDURE[DEPARTURE_NAME_PROCEDURE_LENGTH];
    int32_t DEPARTURE_NAME_AIRPORT_LENGTH;
    char DEPARTURE_NAME_AIRPORT[DEPARTURE_NAME_AIRPORT_LENGTH];
    int32_t DEPARTURE_NAME_RWY_LENGTH;
    char DEPARTURE_NAME_RWY[DEPARTURE_NAME_RWY_LENGTH];
    int32_t DEPARTURE_NAME_TRANS_LENGTH;
    char DEPARTURE_NAME_TRANS[DEPARTURE_NAME_RWY_LENGTH];
    int32_t DEPARTURE_NAME_SID_LENGTH;
    char DEPARTURE_NAME_SID[DEPARTURE_NAME_SID_LENGTH];
    int32_t ROUTE_CLEARANCE_WPT_NUM[100];
    float ROUTE_CLEARANCE_WPT_POS_LAT[100];
    float ROUTE_CLEARANCE_WPT_POS_LONG[100];
    int32_t ROUTE_CLEARANCE_WPT_LEVEL_TYPE[100];
    int32_t ROUTE_CLEARANCE_WPT_LEVEL[100];
    float ROUTE_CLEARANCE_WPT_SPEED[100];
    int32_t ROUTE_CLEARANCE_WPT_RTA_SECOND[100];
    int32_t ROUTE_CLEARANCE_WPT_RTA_MINUTE[100];
    int32_t ROUTE_CLEARANCE_WPT_RTA_HOUR[100];
    int32_t ROUTE_CLEARANCE_WPT_RTA_TOLERANCE[100];
    int32_t ROUTE_CLEARANCE_WPT_HOLD_DEGREES[100];
    int32_t ROUTE_CLEARANCE_WPT_HOLD_DEGREES_TYPE[100];
    int32_t ROUTE_CLEARANCE_WPT_HOLD_TIME_SECOND[100];
    int32_t ROUTE_CLEARANCE_WPT_HOLD_TIME_MINUTE[100];
    int32_t ROUTE_CLEARANCE_WPT_HOLD_TIME_HOUR[100];
    int32_t ROUTE_CLEARANCE_WPT_FLY_MODE[100];
    int32_t ARRIVAL_DATA_PROCEDURE_LENGTH;
    char ARRIVAL_DATA_PROCEDURE[ARRIVAL_DATA_PROCEDURE_LENGTH];
    int32_t ARRIVAL_DATA_AIRPORT_LENGTH;
    char ARRIVAL_DATA_AIRPORT[ARRIVAL_DATA_PROCEDURE_LENGTH];
    int32_t ARRIVAL_DATA_RWY_LENGTH;
    char ARRIVAL_DATA_RWY[ARRIVAL_DATA_RWY_LENGTH];
    int32_t ARRIVAL_DATA_APPROACH_LENGTH;
    char ARRIVAL_DATA_APPROACH[ARRIVAL_DATA_APPROACH_LENGTH];
    int32_t ARRIVAL_DATA_APPROACH_TRANS_LENGTH;
    char ARRIVAL_DATA_APPROACH_TRANS[ARRIVAL_DATA_APPROACH_TRANS_LENGTH];
    int32_t ARRIVAL_DATA_STAR_LENGTH;
    char ARRIVAL_DATA_STAR[ARRIVAL_DATA_STAR_LENGTH];
    int32_t ARRIVAL_DATA_STAR_TRANS_LENGTH;
    char ARRIVAL_DATA_STAR_TRANS[ARRIVAL_DATA_STAR_TRANS_LENGTH];
    int32_t LATERAL_DEVIATION_SIDE;
    int32_t LATERAL_DEVIATION_DISTANCE;
    int32_t FLIGHT_PHASE;
    int32_t REVISION_REASON_1;
    int32_t REVISION_REASON_2;
    int32_t FREE_TEXT_MESSAGE_LENGTH;
    char FREE_TEXT_MESSAGE[FREE_TEXT_MESSAGE_LENGTH];
    

} TXT_UPLINK_DATA_TYPE;


// Total size is: 160

#if defined (_MSC_VER) || defined (__MINGW32__)
#pragma pack(pop)
#endif

#endif
