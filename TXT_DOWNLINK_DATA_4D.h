
#ifndef TXT_DOWNLINK_DATA_4D_h
#define TXT_DOWNLINK_DATA_4D_h

#include <stdint.h>


#ifndef __cplusplus
#ifndef bool
#define bool uint32_t
#endif
#endif

#define TXT_INPUT_DATA_VERSION 12

#if defined (_MSC_VER) || defined (__MINGW32__)
#define __attribute__(x)
#pragma pack(push)
#pragma pack(1)
#endif


typedef struct __attribute__((packed)) // This struct will be repeated 1 times in memory
{
    //DATA HEADER
    int32_t FLIGHT_ID_LENGTH;
    char FLIGHT_ID[FLIGHT_ID_LENGTH];
    int32_t DIRECTION;
    int32_t TIME_STAMP_DATA_YEAR;
    int32_t TIME_STAMP_DATA_MONTH;
    int32_t TIME_STAMP_DATA_DAY;
    int32_t TIME_STAMP_DATA_SECOND;
    int32_t TIME_STAMP_DATA_MINUTE;
    int32_t TIME_STAMP_DATA_HOUR;
    int32_t ID;
    
    // DATA PAYLOAD
    int32_t INSTRUCTION_NAME_TYPE;
    int32_t INSTRUCTION_NAME_LENGTH;
    char INSTRUCTION_NAME[INSTRUCTION_NAME_LENGTH];
    int32_t DEPARTURE_DATA_PROCEDURE_LENGTH;
    char DEPARTURE_DATA_PROCEDURE[DEPARTURE_DATA_PROCEDURE_LENGTH];
    int32_t DEPARTURE_DATA_AIRPORT_LENGTH;
    char DEPARTURE_DATA_AIRPORT[DEPARTURE_DATA_AIRPORT_LENGTH];
    int32_t DEPARTURE_DATA_RWY_LENGTH;
    char DEPARTURE_DATA_RWY[DEPARTURE_DATA_RWY_LENGTH];
    int32_t DEPARTURE_DATA_SID_LENGTH;
    char DEPARTURE_DATA_SID[DEPARTURE_DATA_SID_LENGTH];
    int32_t DEPARTURE_DATA_TRANS_LENGTH;
    char DEPARTURE_DATA_TRANS[DEPARTURE_DATA_TRANS_LENGTH];
    int32_t ROUTE_CLEARANCE_WPT_NUM[100];
    int32_t ROUTE_CLEARANCE_WPT_POS_LAT[100];
    int32_t ROUTE_CLEARANCE_WPT_POS_LONG[100];
    int32_t ROUTE_CLEARANCE_WPT_LEVEL_TYPE[100];
    int32_t ROUTE_CLEARANCE_WPT_LEVEL[100];
    int32_t ROUTE_CLEARANCE_WPT_SPEED[100];
    int32_t ROUTE_CLEARANCE_WPT_RTA_SECOND[100];
    int32_t ROUTE_CLEARANCE_WPT_RTA_MINUTE[100];
    int32_t ROUTE_CLEARANCE_WPT_RTA_HOUR[100];
    int32_t ROUTE_CLEARANCE_WPT_RTA_TOLERANCE[100];
    int32_t ROUTE_CLEARANCE_WPT_HOLD_DIRECTION[100];
    int32_t ROUTE_CLEARANCE_WPT_HOLD_DEGREES[100];
    int32_t ROUTE_CLEARANCE_WPT_HOLD_DEGREES_TYPE[100];
    int32_t ROUTE_CLEARANCE_WPT_HOLD_TIME_SECOND[100];
    int32_t ROUTE_CLEARANCE_WPT_HOLD_TIME_MINUTE[100];
    int32_t ROUTE_CLEARANCE_WPT_HOLD_TIME_HOUR[100];
    int32_t ROUTE_CLEARANCE_WPT_FLY_MODE[100];
    int32_t ARRIVAL_DATA_PROCEDURE_LENGTH;
    char ARRIVAL_DATA_PROCEDURE[ARRIVAL_DATA_PROCEDURE_LENGTH];
    int32_t ARRIVAL_DATA_AIRPORT_LENGTH;
    char ARRIVAL_DATA_AIRPORT[ARRIVAL_DATA_AIRPORT_LENGTH];
    int32_t ARRIVAL_DATA_RWY_LENGTH;
    char ARRIVAL_DATA_RWY[ARRIVAL_DATA_RWY_LENGTH];
    int32_t ARRIVAL_DATA_APPROACH_LENGTH:
    char ARRIVAL_DATA_APPROACH[ARRIVAL_DATA_APPROACH_LENGTH];
    int32_t ARRIVAL_DATA_APPROACH_TRANS_LENGTH;
    char ARRIVAL_DATA_APPROACH_TRANS[ARRIVAL_DATA_APPROACH_TRANS_LENGTH];
    int32_t ARRIVAL_DATA_STAR_LENGTH;
    char ARRIVAL_DATA_STAR[ARRIVAL_DATA_STAR_LENGTH];
    int32_t ARRIVAL_DATA_STAR_TRANS_LENGTH;
    char ARRIVAL_DATA_STAR_TRANS[ARRIVAL_DATA_STAR_TRANS_LENGTH];
    int32_t ERROR_INFORMATION_REF_NUM;
    int32_t ERROR_INFORMATION_TYPE;
    int32_t SPECIFIED_REASON_DOWNLINK;
    int32_t FREE_TEXT_MESSAGE_LENGTH;
    int32_t FREE_TEXT_MESSAGE;
    int32_t SPEED_SCHEDULE_DATA;
    
} TXT_DOWNLINK_DATA_TYPE

#if defined (_MSC_VER) || defined (__MINGW32__)
#pragma pack(pop)
#endif


#endif /* TXT_DOWNLINK_DATA_4D_h */
